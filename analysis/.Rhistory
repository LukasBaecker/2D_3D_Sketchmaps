R --version
version
sessionInfo()
library(installr)
install.packages(installr)
install.packages('installr')
library('installr')
updateR()
sessionInfo()
sessionInfo()
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
# Necessary packages for script.
packages = c("tidyverse", "here",
"plotly", "sf", "knitr")
# Install and then load them.
package.check <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
)
sessionInfo()
here()
here(data)
here("data/questionair.csv")
questionair <- read.csv(here("data/questionair.csv"))
class(questionair)
head(questionair)
questionair <- read.csv(here("data/questionair.csv"))
head(questionair)
questionair
nrow(questionair)
participant_count <- nrow(questionair)
for (index in 1:participant_count) {
print(questionair[1,2])
}
for (index in 1:participant_count) {
print(questionair[index,2])
}
for (index in 1:participant_count) {
print(questionair[index,2])
}
print(index)
for (index in 1:participant_count) {
print(index)
print(questionair[index,2])
}
for (index in 1:participant_count) {
print(index)
print(questionair[index,"age"])
}
for (index in 1:participant_count) {
print(index)
print(questionair[index,"Age"])
}
str(questionair)
questionair <- read.csv(here("data/questionair.csv"))
participant_count <- nrow(questionair)
participant_count
for (index in 1:participant_count) {
print(index)
print(questionair[index,"Age"])
}
str(questionair)
questionair <- read.csv(here("data/questionair.csv"))
participant_count <- nrow(questionair)
participant_count
for (index in 1:participant_count) {
print(index)
print(questionair[index,"Age"])
}
age_mean <- mean(questionair$Age)
age_mean
gender_table <- table(questionair$Gender)
gender_table
solution(1)
solution <- c(3,1,4,3,4,3,2,2,2,1)
solution[1]
solution[5]
help("table")
gender_table$3
gender_table$1
gender_table$"1"
gender_table[1]
questionair <- read.csv(here("data/questionair.csv"))
participant_count <- nrow(questionair)
solution <- c(3,1,4,3,4,3,2,2,2,1)
for (index in 1:participant_count) {
print(index)
print(questionair[index,"Age"])
}
age_mean <- mean(questionair$Age)
#table counting the gender contribution
gender_table <- table(questionair$Gender)
gender_table
questionair <- read.csv(here("data/questionair.csv"))
participant_count <- nrow(questionair)
questionair <- read.csv(here("data/questionair.csv"))
participant_count <- nrow(questionair)
solution <- c(3,1,4,3,4,3,2,2,2,1)
for (index in 1:participant_count) {
print(index)
print(questionair[index,"Age"])
}
age_mean <- mean(questionair$Age)
#table counting the gender contribution
gender_table <- table(questionair$Gender)
gender_table
age_mean
age_min <- min(questionair$Age)
age_max <- max(questionair$Age)
age_max
age_min
questionair
questionair[1,paste("Q",1)]
questionair[1,paste("Q",1, sep="")]
solution[1]
itp_results <- vector(length=participant_count)
solution <- c(3,1,4,3,4,3,2,2,2,1)
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
}
}
itp_results[q] <- counter
print(paste(index, counter))
}
itp_results[3]
itp_results[1]
itp_results
itp_results <- vector(length=participant_count)
itp_results <- vector(length=participant_count)
itp_results
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
}
itp_results[q] <- counter
}
print(paste(index, counter))
}
itp_results
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
itp_results[q] <- counter
}
}
print(paste(index, counter))
}
itp_results
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
}
}
itp_results[q] <- counter
print(paste(index, counter))
}
itp_results
itp_results
itp_results[3]<-10
itp_results
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
}
}
print(counter)
itp_results[q] <- counter
print(paste(index, counter))
}
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
}
}
print(counter)
itp_results[index] <- counter
print(paste(index, counter))
}
itp_results
itp_mean <- mean(itp_results)
itp_mean <- mean(itp_results)
itp_mean
boxplot(questionair$Age)
boxplot(itp_results)
library(here)
gender_table
itp_results
knitr::opts_chunk$set(echo = TRUE)
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
library(tidyverse)
library(tidyverse)
library(here)
library(plotly)
library(sf)
library(knitr)
questionair <- read.csv(here("data/questionair.csv"))
participant_count <- nrow(questionair)
drawing_evaluation <- read.csv(here("data/drawing_evaluation.csv"))
# age statistics
age_mean <- mean(questionair$Age)
age_min <- min(questionair$Age)
age_max <- max(questionair$Age)
# table showing the gender contribution
gender_table <- table(questionair$Gender)
solution <- c(3,1,4,3,4,3,2,2,2,1)
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
}
}
itp_results[index] <- counter #safe results in an vector where the index is the ID of the participant
}
itp_mean <- mean(itp_results)
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d
typeof(drawings_2d)
t(drawings_2d)
drawings_2d
drawings_2d <- t(drawings_2d)
drawings_3d <- t(drawings_3d)
drawings_2d[1]
drawings_2d[3][4]
drawings_2d[3,2]
drawings_2d[3,1]
drawings_2d[1,1]
drawings_2d[0,0]
drawings_2d
drawings_2d[1,]
typeof(questionair)
typeof(itp_results)
itp_results
questionair
questionair[1,]
names(drawings_2d)<-drawings_2d[1,]
drawings_2d<-drawings_2d[-1,]
drawings_2d
drawings_2d[1,]
drawings_2d[1,1]
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_2d <- t(drawings_2d)
drawings_3d <- t(drawings_3d)
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d <- t(drawings_2d)
drawings_3d <- t(drawings_3d)
names(drawings_2d)<-drawings_2d[1,]
drawings_2d
help("read.csv")
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d <- read.csv(here("data/Analysis_3D.csv"))
names(drawings_2d)
drawings_2d <- t(drawings_2d)
drawings_3d <- t(drawings_3d)
names(drawings_2d)
names(drawings_2d)<-drawings_2d[1,]
names(drawings_2d)
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_2d
drawings_2d <- t(drawings_2d)
drawings_2d
drawings_2d[,136]
drawings_2d[,137]
drawings_2d[1,]
names(drawings_2d)<-drawings_2d[1,]
names(drawings_2d)
drawings_2d<-drawings_2d[-1,]
names(drawings_2d)
drawings_2d <- read.csv(here("data/Analysis_2D.csv"))
drawings_2d <- t(drawings_2d)
drawings_2d_import <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d_import <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d <- t(drawings_2d_import)
drawings_3d <- t(drawings_3d_import)
rownames(drawings_2d) <- colnames(drawings_2d_import)
colnames(drawings_3d) <- rownames(drawings_3d_import)
drawings_2d
names(drawings_2d)
row.names(drawings_2d_import)
col.names(drawings_2d_import)
library(data.table)
drawings_2d_import <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d_import <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d <- transpose(drawings_2d_import)
drawings_3d <- transpose(drawings_3d_import)
rownames(drawings_2d) <- colnames(drawings_2d_import)
colnames(drawings_2d) <- rownames(drawings_2d_import)
rownames(drawings_3d) <- colnames(drawings_3d_import)
colnames(drawings_3d) <- rownames(drawings_3d_import)
names(drawings_2d)
drawings_2d
drawings_2d_import <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d_import <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d <- transpose(drawings_2d_import)
drawings_3d <- transpose(drawings_3d_import)
names(drawings_2d_import)
colnames(drawings_2d_import)
rownames(drawings_2d_import)
drawings_2d_import <- read.csv(here("data/Analysis_2D.csv"))
drawings_3d_import <- read.csv(here("data/Analysis_3D.csv"))
drawings_2d <- transpose(drawings_2d_import)
drawings_3d <- transpose(drawings_3d_import)
rownames(drawings_2d) <- colnames(drawings_2d_import)
colnames(drawings_2d) <- rownames(drawings_2d_import)
rownames(drawings_3d) <- colnames(drawings_3d_import)
colnames(drawings_3d) <- rownames(drawings_3d_import)
names(drawings_2d)<-drawings_2d[1,]
drawings_2d<-drawings_2d[-1,]
names(drawings_2d)
names(drawings_3d)<-drawings_3d[1,]
drawings_3d<-drawings_3d[-1,]
typeof(drawings_2d)
drawings_2d[1,]
sum(drawings_2d[1,])
drawings_2d[1,1]
drawings_2d[1,136]
allSum2d <- vector(length=participant_count)
allSum3d <- vector(length=participant_count)
for(id in 1:7){
sum2d <- 0
sum3d <- 0
for(i in 5:130){
# check how many are correct in 2D
sum2d <- sum2d + drawings_2d[id,i]
# check how many are correct in 3D
sum3d <- sum3d + drawings_3d[id,i]
# compare only the visibility
# compare only the correctness
# compare the values from 2D and 3D and check how many changes there are
}
allSum2d[id]<-sum2d
allSum3d[id]<-sum3d
}
allSum2d <- vector(length=participant_count)
allSum3d <- vector(length=participant_count)
for(id in 1:7){
sum2d <- 0
sum3d <- 0
for(i in 5:130){
# check how many are correct in 2D
sum2d <- sum2d + as.numeric(drawings_2d[id,i])
# check how many are correct in 3D
sum3d <- sum3d + as.numeric(drawings_3d[id,i])
# compare only the visibility
# compare only the correctness
# compare the values from 2D and 3D and check how many changes there are
}
allSum2d[id]<-sum2d
allSum3d[id]<-sum3d
}
allSum2d
allSum3d
differences <- vector(length=participant_count)
help("vector")
help("list")
allValues <- list()
names(allValues) <- c("sum2D", "sum3D","visibility2D","visibility3D","z2D","z3D","correct2D","correct3D")
allValues <- list(length=participant_count)
names(allValues) <- c("sum2D", "sum3D","visibility2D","visibility3D","z2D","z3D","correct2D","correct3D")
allValues
allValues <- list(1,2,3,4,5,6)
allValues
allValues <- list(1,2,3,4,5,6,7,8)
names(allValues) <- c("sum2D", "sum3D","visibility2D","visibility3D","z2D","z3D","correct2D","correct3D")
allValues
allValues[1,]
allValues[,1]
allValues[1]
allValues[1,5]<-17
allValues[5,1]<-17
typeof(allValues)
typeof(drawings_2d)
names(drawings_2d)
c(8:10,14:16)
typeof(drawings_2d_import)
drawings_2d
allSum2d
allSum3d
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(here)
library(plotly)
library(sf)
library(knitr)
library(data.table)
questionair <- read.csv(here("data/questionair.csv"))
participant_count <- nrow(questionair)
# age statistics
age_mean <- mean(questionair$Age)
age_min <- min(questionair$Age)
age_max <- max(questionair$Age)
# age statistics
age_mean <- mean(questionair$Age)
age_min <- min(questionair$Age)
age_max <- max(questionair$Age)
# table showing the gender contribution
gender_table <- table(questionair$Gender)
solution <- c(3,1,4,3,4,3,2,2,2,1)
itp_results <- vector(length=participant_count)
for (index in 1:participant_count) {
counter <- 0 # counting right answers
for(q in 1:10){
if(questionair[index,paste("Q",q, sep = "")]==solution[q]){
counter<- counter+1
}
}
itp_results[index] <- counter #safe results in an vector where the index is the ID of the participant
}
itp_mean <- mean(itp_results)
drawings_2d_import <- read.csv(here("data/Analysis_2D.csv")) # import the csv that contains the analysis data for the 2D drawings
drawings_3d_import <- read.csv(here("data/Analysis_3D.csv")) # import the csv that contains the analysis data for the 3D drawings
# transpose the tables using data.table library
drawings_2d <- transpose(drawings_2d_import)
drawings_3d <- transpose(drawings_3d_import)
# and also shift the col and row names for both lists
rownames(drawings_2d) <- colnames(drawings_2d_import)
colnames(drawings_2d) <- rownames(drawings_2d_import)
rownames(drawings_3d) <- colnames(drawings_3d_import)
colnames(drawings_3d) <- rownames(drawings_3d_import)
# after the transpose the correct colnames are in the first row.
# Use the first row as names and delete the row for both lists
names(drawings_2d)<-drawings_2d[1,]
drawings_2d<-drawings_2d[-1,]
names(drawings_3d)<-drawings_3d[1,]
drawings_3d<-drawings_3d[-1,]
allSum2d <- vector(length=participant_count)
allSum3d <- vector(length=participant_count)
all_Visibility2D <- vector(length=participant_count)
all_Z_Visibility2D <- vector(length=participant_count)
all_Correct2D <- vector(length=participant_count)
for(id in 1:7){
sum2d <- 0
sum3d <- 0
# evaluate the object relations
for(i in 5:130){
# check how many are correct in 2D
sum2d <- sum2d + as.numeric(drawings_2d[id,i])
# check how many are correct in 3D
sum3d <- sum3d + as.numeric(drawings_3d[id,i])
# compare only the visibility
# compare the visibility of z axis
# compare only the correctness
if(i %in% c(8:10,14:16,20:22,26:28,32:34,38:40)){
}
}
allSum2d[id]<-sum2d
allSum3d[id]<-sum3d
}
allSum2d
allSum3d
gender_table
itp_mean
itp_results
